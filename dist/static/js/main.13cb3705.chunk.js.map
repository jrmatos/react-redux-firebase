{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/NavBar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","_ref4","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","getState","_ref3","getFirebase","firebase","wrap","_context2","prev","next","auth","type","stop","_x4","_x5","_x6","apply","this","arguments","props","react_default","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","console","log","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","concat","projects_ProjectSummary","dashboardStyle","height","overflow-y","Dashboard","_this$props","style","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","_ref2","_callee","_context","signInWithEmailAndPassword","t0","err","_x","_x2","_x3","SignUp","firstName","lastName","signUp","required","newUser","_ref6","_callee3","_ref5","getFirestore","resp","_context3","createUserWithEmailAndPassword","sent","doc","set","_x7","_x8","_x9","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_NavBar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initiState","authReducer","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","then","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.13cb3705.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_ERROR = 'SIGNUP_ERROR';\n\nexport const signIn = (credentials) => {\n    return async (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        try {\n            await firebase.auth().signInWithEmailAndPassword(\n                credentials.email,\n                credentials.password\n            );\n    \n            dispatch({ type: LOGIN_SUCCESS });\n        } catch (err) {\n            dispatch({ type: LOGIN_ERROR, err });\n        }\n    }\n}\n\nexport const signOut = () => {\n    return async (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        await firebase.auth().signOut();\n\n        dispatch({ type: SIGNOUT_SUCCESS });\n\n    }\n}\n\nexport const signUp = (newUser) => {\n    return async (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        try {\n            const resp = await firebase.auth().createUserWithEmailAndPassword(\n                newUser.email,\n                newUser.password\n            );\n\n            await firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            });\n\n            dispatch({ type: SIGNUP_SUCCESS });\n        } catch (err) {\n            dispatch({ type: SIGNUP_ERROR, err });\n        }\n\n        \n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Signup</NavLink></li>\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux';\n\nconst NavBar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />;\n\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\n                { links }\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log('navbar', state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(NavBar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">\n                        Notifications\n                    </span>\n                    <ul className=\"notifications\">\n                        {\n                            notifications && notifications.map(item => {\n                                return (\n                                    <li key={item.id}>\n                                        <span className=\"pink-text\">{item.user} </span>\n                                        <span>{item.content}</span>\n                                        <div className=\"grey-text note-date\">\n                                            {moment(item.time.toDate()).fromNow()}\n                                        </div>\n                                    </li>\n                                )\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by the {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({ projects }) => {\n    return (\n        <div className=\"project-list section\">\n            { projects && projects.map(project => {\n                return (\n                    <Link to={`/project/${project.id}`} key={project.id}>\n                        <ProjectSummary project={project} />\n                    </Link>\n                );\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nconst dashboardStyle = {\n    'height': '700px',\n    'overflow-y': 'scroll'\n}\n\nclass Dashboard extends Component {\n    render() {\n        const { projects, auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to=\"/signin\"/>;\n\n        return (\n            <div className=\"dashboard container\" style={dashboardStyle}>\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n      { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n      { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n    ])\n  )(Dashboard)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nfunction ProjectDetails(props) {\n    const { project, auth } = props;\n    if (!auth.uid) return <Redirect to=\"/signin\"/>;\n\n    if (project) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">{ project.title }</span>\n                    <p>{ project.content }</p>\n                </div>\n                <div className=\"card-action grey lighten-4 grey-text\">\n                    <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\n                    <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        );\n    }\n    \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id]: null;\n    return {\n        project,\n        auth: state.firebase.auth\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to=\"/\"/>;\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-o\">Login</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to=\"/\"/>;\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} required/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} required/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-o\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to=\"/signin\"/>;\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project ontent</label>\n                        <textarea \n                            className=\"materialize-textarea\"\n                            id=\"content\"\n                            onChange={this.handleChange}>\n\n                        </textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-o\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    createProject: (project) => dispatch(createProject(project))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const CREATE_PROJECT = 'CREATE_PROJECT';\nexport const CREATE_PROJECT_ERROR = 'CREATE_PROJECT_ERROR';\n\nexport const createProject = (project) => {\n    return async (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n\n        try {\n            await firestore.collection('projects').add({\n                ...project,\n                authorFirstName: profile.firstName,\n                authorLastName: profile.lastName,\n                authorId: authorId,\n                createdAt: new Date()\n            });\n    \n            dispatch({\n                type: CREATE_PROJECT,\n                project\n            });\n        }\n        catch (err) {\n            dispatch({\n                type: CREATE_PROJECT_ERROR,\n                err\n            });\n        }\n       \n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/layout/NavBar'\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { LOGIN_SUCCESS, LOGIN_ERROR, SIGNOUT_SUCCESS, SIGNUP_SUCCESS, SIGNUP_ERROR } from '../actions/authActions';\n\nconst initiState = {\n    authError: null\n};\n\nconst authReducer = (state = initiState, action) => {\n    switch(action.type) {\n        case LOGIN_ERROR:\n            console.log(LOGIN_ERROR)\n            return {\n                ...state,\n                authError: 'Login Failed'\n            };\n        case LOGIN_SUCCESS:\n            console.log(LOGIN_SUCCESS)\n            return {\n                ...state,\n                authError: null,\n\n            }\n        case SIGNOUT_SUCCESS:\n            console.log(SIGNOUT_SUCCESS);\n            return state;\n        case SIGNUP_SUCCESS:\n            console.log(SIGNUP_SUCCESS)\n            return {\n                ...state,\n                authError: null\n            };\n        case SIGNUP_ERROR:\n            console.log(SIGNUP_ERROR);\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from '../actions/projectActions';\n\nconst initiState = {\n    projects: [\n        {\n            id: '1', title: 'help me find peach', content: 'blah blah blah'\n        },\n        {\n            id: '2', title: 'collect all the stars', content: 'blah blah blah'\n        },\n        {\n            id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'\n        }   \n    ]\n};\n\nconst projectReducer = (state = initiState, action) => {\n    switch (action.type) {\n        case CREATE_PROJECT:\n            console.log('Created project', action.project);\n            return state;\n        case CREATE_PROJECT_ERROR:\n            console.log('Created project error', action.err);\n            return state;\n        default: \n            return state; \n    }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nvar config = {\n    apiKey: \"AIzaSyDjKi7pXw3XIBIOgpBrUmsoISEAs3NqfrE\",\n    authDomain: \"net-ninja-marioplan-48732.firebaseapp.com\",\n    databaseURL: \"https://net-ninja-marioplan-48732.firebaseio.com\",\n    projectId: \"net-ninja-marioplan-48732\",\n    storageBucket: \"net-ninja-marioplan-48732.appspot.com\",\n    messagingSenderId: \"558550687925\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    )\n);\n\n// wait until firebase is ready\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n});\n\n"],"sourceRoot":""}